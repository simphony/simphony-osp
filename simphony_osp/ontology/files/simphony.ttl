@prefix : <https://www.simphony-project.eu/simphony##> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix simphony: <https://www.simphony-project.eu/simphony#> .
@base <https://www.simphony-project.eu/simphony#> .

<https://www.simphony-project.eu/simphony#> rdf:type owl:Ontology .

#################################################################
#    Annotation properties
#################################################################

###  https://www.simphony-project.eu/simphony#main
simphony:main rdf:type owl:AnnotationProperty ;
              rdfs:comment "When multiple ontology individuals are serialized to a file, one of them can be tagged with this proverty (whose value must be True). When the file is imported again in SimPhoNy, only such item will be returned."@en ;
              rdfs:label "Main individual"@en ;
              rdfs:range xsd:boolean .

###  https://www.simphony-project.eu/simphony#contains
simphony:contains rdf:type owl:ObjectProperty ;
                  rdf:type owl:IrreflexiveProperty ;
                  rdfs:domain simphony:Container ;
                  rdfs:comment "Containment relationship for the 'Container' class."@en .

#################################################################
#    Classes
#################################################################

###  https://www.simphony-project.eu/simphony#Container
simphony:Container rdf:type owl:Class ;
                   rdfs:subClassOf simphony:Entity ;
                   rdfs:comment """Class of objects that cluster ontology individuals together.

The relationship \"contains\", connects a container to the objects it contains.

In SimPhoNy, the Wrapper Python objects that are used to interact with other software tools behave as containers. From the ontological point of view, the Wrapper Python object is a container individual, and in fact, this is what one would find if data created with a SimPhoNy wrapper is examined.

For a wrapper developer it can be of interest to create a subclass of this one that adds further restrictions on what kind of objects a container might hold. For example, if one wants to create a wrapper for a tool that simulates a city, then one can specify that the container must contain exactly one city individual, one time step individual, one duration individual, etc. Any other kind of individual could be prohibited."""@en .


###  https://www.simphony-project.eu/simphony#Entity
simphony:Entity rdf:type owl:Class ;
                rdfs:subClassOf owl:Thing ;
                rdfs:isDefinedBy "The root entity of the ontology." .


###  https://www.simphony-project.eu/simphony#File
simphony:File rdf:type owl:Class ;
              rdfs:subClassOf simphony:Entity ;
              rdfs:isDefinedBy "An entity associated to a file." .


###  Generated by the OWL API (version 4.5.9.2019-02-01T07:24:44Z) https://github.com/owlcs/owlapi
