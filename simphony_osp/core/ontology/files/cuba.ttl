@prefix : <https://www.simphony-project.eu/cuba##> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix cuba: <https://www.simphony-project.eu/cuba#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@base <https://www.simphony-project.eu/cuba#> .

<https://www.simphony-project.eu/cuba#> rdf:type owl:Ontology .

#################################################################
#    Annotation properties
#################################################################

###  https://www.simphony-project.eu/cuba#_default
cuba:_default rdf:type owl:AnnotationProperty .


###  https://www.simphony-project.eu/cuba#_default_attribute
cuba:_default_attribute rdf:type owl:AnnotationProperty .


###  https://www.simphony-project.eu/cuba#_default_rel
cuba:_default_rel rdf:type owl:AnnotationProperty .


###  https://www.simphony-project.eu/cuba#_default_value
cuba:_default_value rdf:type owl:AnnotationProperty .


###  https://www.simphony-project.eu/cuba#_reference_by_label
cuba:_reference_by_label rdf:type owl:AnnotationProperty .


#################################################################
#    Object Properties
#################################################################

###  https://www.simphony-project.eu/cuba#activeRelationship
cuba:activeRelationship rdf:type owl:ObjectProperty ;
                        rdfs:subPropertyOf cuba:relationship ;
                        owl:inverseOf cuba:passiveRelationship ;
                        rdfs:isDefinedBy "The root of all active relationships. Active relationships express that one ontology individual contains another ontology individual."@en .


###  https://www.simphony-project.eu/cuba#contains
cuba:contains rdf:type owl:ObjectProperty ;
              rdfs:subPropertyOf cuba:activeRelationship ;
              rdf:type owl:IrreflexiveProperty ;
              rdfs:domain cuba:Container ;
              rdfs:comment "Containment relationship for the 'Container' class."@en .


###  https://www.simphony-project.eu/cuba#passiveRelationship
cuba:passiveRelationship rdf:type owl:ObjectProperty ;
                         rdfs:subPropertyOf cuba:relationship ;
                         rdfs:isDefinedBy "The inverse of activeRelationship. Passive relationships express that one ontology individual is contained in another ontology individual."@en .


###  https://www.simphony-project.eu/cuba#relationship
cuba:relationship rdf:type owl:ObjectProperty ;
                  rdfs:subPropertyOf owl:topObjectProperty ;
                  owl:inverseOf cuba:relationship ;
                  rdf:type owl:SymmetricProperty ;
                  rdfs:isDefinedBy "The root of all relationships." .


#################################################################
#    Data properties
#################################################################

###  https://www.simphony-project.eu/cuba#attribute
cuba:attribute rdf:type owl:DatatypeProperty ;
               rdfs:subPropertyOf owl:topDataProperty ;
               rdf:type owl:FunctionalProperty ;
               rdfs:isDefinedBy "The root of all attributes." .


###  https://www.simphony-project.eu/cuba#path
cuba:path rdf:type owl:DatatypeProperty ;
          rdfs:subPropertyOf cuba:attribute ;
          rdf:type owl:FunctionalProperty ;
          rdfs:domain cuba:File ;
          rdfs:range xsd:string ;
          rdfs:isDefinedBy "The path to a local file." .


#################################################################
#    Classes
#################################################################

###  https://www.simphony-project.eu/cuba#Container
cuba:Container rdf:type owl:Class ;
               rdfs:subClassOf cuba:Entity ;
               rdfs:comment """Class of objects that cluster ontology individuals together.

The relationship \"contains\", connects a container to the objects it contains.

In SimPhoNy, the Wrapper Python objects that are used to interact with other software tools behave as containers. From the ontological point of view, the Wrapper Python object is a container individual, and in fact, this is what one would find if data created with a SimPhoNy wrapper is examined.

For a wrapper developer it can be of interest to create a subclass of this one that adds further restrictions on what kind of objects a container might hold. For example, if one wants to create a wrapper for a tool that simulates a city, then one can specify that the container must contain exactly one city individual, one time step individual, one duration individual, etc. Any other kind of individual could be prohibited."""@en .


###  https://www.simphony-project.eu/cuba#Entity
cuba:Entity rdf:type owl:Class ;
            rdfs:subClassOf owl:Thing ;
            rdfs:isDefinedBy "The root entity of the ontology." .


###  https://www.simphony-project.eu/cuba#File
cuba:File rdf:type owl:Class ;
          rdfs:subClassOf cuba:Entity ;
          rdfs:isDefinedBy "An entity associated to a file." .


###  Generated by the OWL API (version 4.5.9.2019-02-01T07:24:44Z) https://github.com/owlcs/owlapi
